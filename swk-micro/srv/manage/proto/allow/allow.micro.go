// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: allow.proto

package allow

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "context"
	api "github.com/micro/go-micro/v2/api"
	client "github.com/micro/go-micro/v2/client"
	server "github.com/micro/go-micro/v2/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ api.Endpoint
var _ context.Context
var _ client.Option
var _ server.Option

// Api Endpoints for AllowService service

func NewAllowServiceEndpoints() []*api.Endpoint {
	return []*api.Endpoint{}
}

// Client API for AllowService service

type AllowService interface {
	FindAllows(ctx context.Context, in *FindAllowsRequest, opts ...client.CallOption) (*FindAllowsResponse, error)
	FindLevelAllows(ctx context.Context, in *FindLevelAllowsRequest, opts ...client.CallOption) (*FindLevelAllowsResponse, error)
	FindAllow(ctx context.Context, in *FindAllowRequest, opts ...client.CallOption) (*FindAllowResponse, error)
	AddAllow(ctx context.Context, in *AddAllowRequest, opts ...client.CallOption) (*AddAllowResponse, error)
	ModifyAllow(ctx context.Context, in *ModifyAllowRequest, opts ...client.CallOption) (*ModifyAllowResponse, error)
	DeleteAllow(ctx context.Context, in *DeleteAllowRequest, opts ...client.CallOption) (*DeleteAllowResponse, error)
	DeleteAllows(ctx context.Context, in *DeleteAllowsRequest, opts ...client.CallOption) (*DeleteAllowsResponse, error)
}

type allowService struct {
	c    client.Client
	name string
}

func NewAllowService(name string, c client.Client) AllowService {
	return &allowService{
		c:    c,
		name: name,
	}
}

func (c *allowService) FindAllows(ctx context.Context, in *FindAllowsRequest, opts ...client.CallOption) (*FindAllowsResponse, error) {
	req := c.c.NewRequest(c.name, "AllowService.FindAllows", in)
	out := new(FindAllowsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *allowService) FindLevelAllows(ctx context.Context, in *FindLevelAllowsRequest, opts ...client.CallOption) (*FindLevelAllowsResponse, error) {
	req := c.c.NewRequest(c.name, "AllowService.FindLevelAllows", in)
	out := new(FindLevelAllowsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *allowService) FindAllow(ctx context.Context, in *FindAllowRequest, opts ...client.CallOption) (*FindAllowResponse, error) {
	req := c.c.NewRequest(c.name, "AllowService.FindAllow", in)
	out := new(FindAllowResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *allowService) AddAllow(ctx context.Context, in *AddAllowRequest, opts ...client.CallOption) (*AddAllowResponse, error) {
	req := c.c.NewRequest(c.name, "AllowService.AddAllow", in)
	out := new(AddAllowResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *allowService) ModifyAllow(ctx context.Context, in *ModifyAllowRequest, opts ...client.CallOption) (*ModifyAllowResponse, error) {
	req := c.c.NewRequest(c.name, "AllowService.ModifyAllow", in)
	out := new(ModifyAllowResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *allowService) DeleteAllow(ctx context.Context, in *DeleteAllowRequest, opts ...client.CallOption) (*DeleteAllowResponse, error) {
	req := c.c.NewRequest(c.name, "AllowService.DeleteAllow", in)
	out := new(DeleteAllowResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *allowService) DeleteAllows(ctx context.Context, in *DeleteAllowsRequest, opts ...client.CallOption) (*DeleteAllowsResponse, error) {
	req := c.c.NewRequest(c.name, "AllowService.DeleteAllows", in)
	out := new(DeleteAllowsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AllowService service

type AllowServiceHandler interface {
	FindAllows(context.Context, *FindAllowsRequest, *FindAllowsResponse) error
	FindLevelAllows(context.Context, *FindLevelAllowsRequest, *FindLevelAllowsResponse) error
	FindAllow(context.Context, *FindAllowRequest, *FindAllowResponse) error
	AddAllow(context.Context, *AddAllowRequest, *AddAllowResponse) error
	ModifyAllow(context.Context, *ModifyAllowRequest, *ModifyAllowResponse) error
	DeleteAllow(context.Context, *DeleteAllowRequest, *DeleteAllowResponse) error
	DeleteAllows(context.Context, *DeleteAllowsRequest, *DeleteAllowsResponse) error
}

func RegisterAllowServiceHandler(s server.Server, hdlr AllowServiceHandler, opts ...server.HandlerOption) error {
	type allowService interface {
		FindAllows(ctx context.Context, in *FindAllowsRequest, out *FindAllowsResponse) error
		FindLevelAllows(ctx context.Context, in *FindLevelAllowsRequest, out *FindLevelAllowsResponse) error
		FindAllow(ctx context.Context, in *FindAllowRequest, out *FindAllowResponse) error
		AddAllow(ctx context.Context, in *AddAllowRequest, out *AddAllowResponse) error
		ModifyAllow(ctx context.Context, in *ModifyAllowRequest, out *ModifyAllowResponse) error
		DeleteAllow(ctx context.Context, in *DeleteAllowRequest, out *DeleteAllowResponse) error
		DeleteAllows(ctx context.Context, in *DeleteAllowsRequest, out *DeleteAllowsResponse) error
	}
	type AllowService struct {
		allowService
	}
	h := &allowServiceHandler{hdlr}
	return s.Handle(s.NewHandler(&AllowService{h}, opts...))
}

type allowServiceHandler struct {
	AllowServiceHandler
}

func (h *allowServiceHandler) FindAllows(ctx context.Context, in *FindAllowsRequest, out *FindAllowsResponse) error {
	return h.AllowServiceHandler.FindAllows(ctx, in, out)
}

func (h *allowServiceHandler) FindLevelAllows(ctx context.Context, in *FindLevelAllowsRequest, out *FindLevelAllowsResponse) error {
	return h.AllowServiceHandler.FindLevelAllows(ctx, in, out)
}

func (h *allowServiceHandler) FindAllow(ctx context.Context, in *FindAllowRequest, out *FindAllowResponse) error {
	return h.AllowServiceHandler.FindAllow(ctx, in, out)
}

func (h *allowServiceHandler) AddAllow(ctx context.Context, in *AddAllowRequest, out *AddAllowResponse) error {
	return h.AllowServiceHandler.AddAllow(ctx, in, out)
}

func (h *allowServiceHandler) ModifyAllow(ctx context.Context, in *ModifyAllowRequest, out *ModifyAllowResponse) error {
	return h.AllowServiceHandler.ModifyAllow(ctx, in, out)
}

func (h *allowServiceHandler) DeleteAllow(ctx context.Context, in *DeleteAllowRequest, out *DeleteAllowResponse) error {
	return h.AllowServiceHandler.DeleteAllow(ctx, in, out)
}

func (h *allowServiceHandler) DeleteAllows(ctx context.Context, in *DeleteAllowsRequest, out *DeleteAllowsResponse) error {
	return h.AllowServiceHandler.DeleteAllows(ctx, in, out)
}
